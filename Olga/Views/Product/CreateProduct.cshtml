@using Olga.Models
@using System.Web.Mvc.Html
@using Olga.DAL.Entities
@model Olga.Models.ProductCreateModel

<div class="container">
<h2>Create Product</h2>
<div class="row" style="overflow: auto;">
@*<link href="~/Content/bootstrap-datetimepicker.css" rel="stylesheet" />
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />*@

@using (Html.BeginForm("CreateProduct", "Product", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <br />
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <input type="hidden" id="CountryId" name="CountryId" value="@ViewBag.ContryId" />
        @Html.HiddenFor(model => model.CountryId)
        @Html.HiddenFor(model => model.Id)
        <div class="form-group">
            @Html.Label("CountryName", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <label class="control-label text-info ">@ViewBag.ContryName</label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ProductNameId, new SelectList(@ViewBag.ProductNames, "Id", "Name"), new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ProductCodeId, new SelectList(@ViewBag.ProductCodes, "Id", "Code"), "-- No Product Code --", new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MarketingAuthorizNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.MarketingAuthorizNumberId, new SelectList(@ViewBag.MarketingAuthorizNumbers, "Id", "Number"), "-- No MarketingAuthorizNumber --", new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PackSize, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.PackSizeId, new SelectList(@ViewBag.PackSizes, "Id", "Size"), "-- No PackSize --", new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MarketingAuthorizHolder, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.MarketingAuthorizHolderId, new SelectList(ViewBag.marketingAuthorizHolder, "Id", "Name"), "-- No MarketingAuthorizHolder --", new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApprDocsTypes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 left">
                <ul style="list-style-type: none; padding-left: 0px;">
                    @foreach (var apprDocsType in ViewBag.apprDocsTypes)
                    {
                        <li>
                            <input type="checkbox"
                                   name="selectedApprDocsTypes" value="@apprDocsType.Value" id="@apprDocsType.Value"
                                   @{ if (Model != null) { var foundItem = Model.ApprDocsTypes.FirstOrDefault(i => i.ApprType == apprDocsType.Text); if (foundItem != null) { { <text> checked='checked' </text>   } } } } />
                            <label for="@apprDocsType.Value">@apprDocsType.Text</label>
                        </li>
                    }
                </ul>


            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Manufacturers, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <ul style="list-style-type: none; padding-left: 0px;">
                    @foreach (var manufacturer in ViewBag.manufacturers)
                    {
                        <li>
                            <input type="checkbox"
                                   name="selectedManufacturers" value="@manufacturer.Value" id="@manufacturer.Value"
                                   @{ if (Model != null) { var foundItem = Model.Manufacturers.FirstOrDefault(i => i.Name == manufacturer.Text); if (foundItem != null) { <text> checked='checked' </text>   } } } />
                            <label for="@manufacturer.Value">@manufacturer.Text</label>
                        </li>
                     }
                </ul>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Artworks, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <ul style="list-style-type: none; padding-left: 0px;">
                    @foreach (var artwork in ViewBag.artworks)
                    {
                        <li>
                            <input type="checkbox"
                                   name="selectedArtworks" value="@artwork.Value" id="@artwork.Value"
                                   @{ if (Model != null) { var foundItem = Model.Artworks.FirstOrDefault(i => i.Artwork_name == artwork.Text); if (foundItem != null) { <text> checked='checked' </text>   } } } />
                            <label for="@artwork.Value">@artwork.Text</label>
                        </li>
                    }
                </ul>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Strength, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.StrengthId, new SelectList(ViewBag.strength, "Id", "Strngth"), "-- No Strength --", new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PharmaceuticalForm, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.PharmaceuticalFormId, new SelectList(ViewBag.pharmaceuticalForm, "Id", "PharmaForm"), "-- No Pharmaceutical Form --", new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IssuedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    var dateValue =
                        DateTime.MinValue == Model.IssuedDate
                            ? String.Empty
                            : Model.IssuedDate.ToString();
                }
                <input
                    class="form-control rounded"
                    data-val="true"
                    id="IssuedDate"
                    name="IssuedDate"
                    value="@dateValue"/>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpiredDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    var dateValue2 =
                        DateTime.MinValue == Model.ExpiredDate
                            ? String.Empty
                            : Model.ExpiredDate.ToString();
                }
                <input
                    class="form-control rounded"
                    data-val="true"
                    id="ExpiredDate"
                    name="ExpiredDate"
                    value="@dateValue2"/>
            </div>
        </div>
        <br/>

        <div class="form-group">
            <label class = "control-label col-md-2">Documents:</label>
            <div class="col-md-10">
                @{
                    foreach (var item in Model.DocumentImages)
                    {
                        var ext = item.Substring(item.IndexOf("."), item.Length - item.IndexOf("."));
                        var docImage = "/Upload/Documents/" + item;
                        if (ext.Equals(".txt"))  { docImage = "/Content/images/extentions/txt.jpg"; }
                        if (ext.Equals(".pdf"))  { docImage = "/Content/images/extentions/pdf.jpg"; }
                        if (ext.Equals(".ai"))   { docImage = "/Content/images/extentions/ai.jpg"; }
                        if (ext.Equals(".docx")) { docImage = "/Content/images/extentions/docx.jpg"; }
                        if (ext.Equals(".xlsx")) { docImage = "/Content/images/extentions/xlsx.jpg"; }
                        if (ext.Equals(".cdr"))  { docImage = "/Content/images/extentions/cdr.jpg"; }
                        <a href="~/Upload/Documents/@item" target="_blank">
                            <img class="col-md-1 col-xs-1" src="@docImage" />
                        </a>
                    }
                }
            </div>
        </div>
        @Html.HiddenFor(m => m.DocumentImagesListString)
        <hr/>
        <div class="form-group">
            <div class="col-md-1 col-xs-1 col-md-offset-1">
                <input type="submit" value="Save" class="btn btn-primary" id="submit-all" />
            </div>
            <div class="col-md-1 col-xs-1 col-md-offset-1">
                <a class="btn btn-default" href="#"
                   data-toggle="modal" data-target="#uploadImageModal"
                   id="UploadImg">Upload Documents</a>
            </div>
        </div>
    </div>
    }
    </div>
</div>
@Html.Partial("~/Views/Shared/_UploadFiles.cshtml")

@section Scripts {
                    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/dropzonescripts")
    <script src='@Url.Content("~/Scripts/jquery-ui-1.12.1.min.js")' type="text/javascript"></script>
    @*<script src="~/Scripts/jquery-3.3.1.min.js"></script>*@
    <script src='@Url.Content("~/Scripts/Products/products.js")'></script>


    @*<script src="~/Scripts/bootstrap.min.js"></script>*@
    @*<script src="~/Content/bootstrap-datetimepicker.js"></script>*@

    @*<script type="text/javascript">
        $('#IssuedDate').datetimepicker();
        $('#ExpiredDate').datetimepicker();
    </script>*@
    
    <script type="text/javascript">
        (function (parameters) {
            $(document).ready(function () {
                            console.log('@Model.IssuedDate');
                            var format = 'DD.MM.YYYY';
                $('#IssuedDate').datetimepicker({
                                format: format
                });
                            console.log('@Model.ExpiredDate');
                $('#ExpiredDate').datetimepicker({
                                format: format
                });
                        });

        }())


    </script>


}

