@{
    ViewBag.Title = "EditProcedureFiles";
}
@using System.Drawing.Imaging
@using System.Web.Mvc.Html
@using Olga.DAL.Entities
@model Olga.Models.ProcedureViewModel

<div>
    <div class="row" style=" margin-left:  20px;margin-right: 10px;">
        <div class="alert-success" style="width: 100%">
            <h1>
                <span id="CountryName"></span>
                <span class="productInfo"><img class="productInfo" src="../../Content/images/loader.gif" /></span>
                <img class="flag" id="CountryFlag" />
            </h1>
        </div>
        <h2>
            Update Procedure Files for:<span style="color: blue; font-weight: bold; margin-top: 20px;">
                <span id="ProductNameWithLink" style="color: blue; font-weight: bold; margin-top: 20px;"></span>
            </span>
        </h2>
        <div class="product_span">
            @MyHelpers.MakeProductInfoField()
            <div id="load" class="load" align="center" style="padding-left: 40px;">
                <img src="../../Content/images/loading.gif" width="28" height="20" /> Loading...
            </div>
        </div>

        <br />
        <br />
        <div class="form-group" id="documentsGroup" name="documentsGroup">
            <div class="row">
                <div class="col-md-10">
                    @foreach (var period in ViewBag.DocsType)
                    {
                        var labelName = Enum.GetName(typeof(ProcedureDocsType), period);
                        <span>@labelName</span><br /><br />
                        foreach (var document in Model.ProcedureDocuments.Where(a => a.ProcedureDocsType == period))
                        {
                            var docDate = document.DownloadDt != null ? $"[{document.DownloadDt.Value.ToShortDateString()}]" : "[no date]";
                            <div>
                                <span>@docDate</span>
                                <a href="~/Upload/Documents/Procedures/@document.PathToDocument">@document.PathToDocument</a>
                                <a href="#" id="@document.Id" class="delete" title="Delete file">x</a>
                                <img id="load_@document.Id" style="visibility: hidden; height: 30px; margin-left: 25px;" src="~/Content/images/loader.gif">
                            </div><br />
                        }
                        <hr />
                    }
                </div>
            </div>
            <div class="row">
                <div class="col-md-10">
                    <h3>Choose file to download:</h3>
                    @using (Html.BeginForm("EditProcedureFiles", "Procedure", new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()

                        <input type="hidden" id="procedureId" name="procedureId" value="@Model.Id" />
                        <input type="hidden" id="productId" name="productId" value="@Model.ProductId" />

                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.Label("Document type:", htmlAttributes: new { @class = "control-label col-md-4 width_100" })
                            </div>
                            <div class="col-md-8">
                                @Html.DropDownList("procedureDocsType", EnumHelper.GetSelectList(typeof(ProcedureDocsType)), "-- Select Type --", new { @class = "form-control", onchange = "dropdownSelected();" })

                            </div>
                        </div><br /><br /><br />
                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.Label("Document sources:", htmlAttributes: new { @class = "control-label col-md-4 width_100" })
                            </div>
                            <div class="col-md-8">
                                <label id="FileLable" class="btn btn-default">Browse for file ...<input type="file" id="uploadFiles" name="uploadFiles" onchange="getFileData(this);" hidden /></label>
                                <label style="margin-left: 20px;" id="choosenFile" name="choosenFile" />
                            </div>
                        </div><br /><br /><br />
                        <div class="form-group">
                            <div class="col-md-4">
                            </div>
                            <div class="col-md-2 ">
                                <input type="submit" value="Download" class="btn btn-info" />
                            </div>
                            <div class="col-md-6" style="padding-top: 5px; padding-bottom: 0px;">
                                <div class="progress progress-striped">
                                    <div class="progress-bar progress-bar-success">0%</div>
                                </div>
                            </div>
                        </div><br /><br />
                    }
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <span>@Html.ActionLink("Back to procedure files -->", "ProductProcedures", "Procedure", new { id = @Model.ProductId }, 
                              new { @class = "btn btn-info", @target = "_blank" })</span>
                </div>
            </div><br />
        </div>
    </div>
</div>
@section Scripts {
    <script>
        (function () {

            var linkGetProductInfo = '@Url.Action("GetProductInfo", "Procedure")';

            var queryString = window.location.search;
            var urlParams = new URLSearchParams(queryString);
            var productId = urlParams.get('productId');
            console.log("productId=" + productId);

            getProductInfo(linkGetProductInfo, productId);

            document.getElementById("choosenFile").innerHTML = "No file yet";

            var bar = $('.progress-bar');
            var barImage = $('#loading');
            var percent = $('.progress-bar');
            var status = $('#status');
            $(".progress").hide();

            $('form').ajaxForm({
                beforeSend: function(e) {
                    var fileInput = document.getElementById('uploadFiles');
                    var selectedDocType = $('#procedureDocsType :selected').text();
                    console.log("selectedDocTypeIndex = " + selectedDocType);

                    if (selectedDocType == "-- Select Type --") {
                        $('#procedureDocsType').css('background-color', 'lightcoral');
                        console.log("no doc type selected");
                        toastr.error("Please select a Document Type to download!");
                        return false;
                    }

                    if (!fileInput.files[0]) {
                        $('#FileLable').css('background-color', 'lightcoral');
                        console.log("no file chosen");
                        toastr.error("Please select a file before clicking 'Load'!");
                        return false;
                    }

                    status.empty();
                    var percentVal = '0%';
                    bar.width(percentVal);
                    percent.html(percentVal);
                    console.log("beforeSend...");
                    $("#loading").show();

                },
                uploadProgress: function(event, position, total, percentComplete) {
                    $(".progress").show();
                    var percentVal = percentComplete + '%';
                    bar.width(percentVal);
                    percent.html(percentVal);
                    console.log("uploadProgress...");
                },
                success: function(request) {
                    var percentVal = '100%';
                    bar.width(percentVal);
                    percent.html(percentVal);
                    console.log("success downloading");

                    if (request.success === true) {
                        console.log("success downloading");
                        toastr.info(request.responseText);
                        toastr.info("File downloaded successfuly! Wait a few seconds...");
                    }
                    if (request.success === false) {
                        console.log(request.responseText);
                        toastr.error(request.responseText);
                    }
                },
                error: function() {
                    var percentVal = '100%';
                    bar.width(percentVal);
                    percent.html(percentVal);
                    console.log(xhr.responseText);
                    toastr.error(xhr.responseText);
                },
                complete: function(xhr) {
                    status.html(xhr.responseText);
                    console.log(xhr.responseText);
                    console.log("complete downloading");
                    $(".progress").hide();
                    $("#loading").hide();
                    toastr.info("Page refreshing! Please wait!");
                    timeRefresh(0);
                }
            });

        })();

        function getFileData(myFile) {
            if (!myFile) {
                $('#FileLable').css('background-color', 'lightcoral');
                toastr.error("Please select a Document to download!");
                console.log("no file chosen");
            } else {
                $('#FileLable').css('background-color', 'lightgrey');
                var file = myFile.files[0];
                var filename = file.name;
                console.log("file chosen = " + filename);
                document.getElementById("choosenFile").innerHTML = filename;
            }
        }

        function dropdownSelected() {
            var selectedDocType = $('#procedureDocsType :selected').text();
            if (selectedDocType != "-- Select Type --") {
                console.log("selectedDocType = " + selectedDocType);
                $('#procedureDocsType').css('background-color', '#ffffff');;

            }
        }

        function timeRefresh(timeoutPeriod) {
            setTimeout("location.reload(true);", timeoutPeriod);
        }

        $(document).ready(function() {
            //$('#load').hide();
            //document.getElementById(id).style.display = 'block';
            document.getElementById('load').style.visibility = "hidden";
        });

        $(function() {
            $(".delete").click(function() {
                var commentContainer = $(this).parent();
                var link = '@Url.Action("DeleteProcedureFile", "Procedure")';
                var documentId = $(this).attr("id");
                var loaderId = "load_" + documentId;
                var procedureId = $('#procedureId').val();
                console.log("documentId = " + documentId);
                console.log("procedureId = " + procedureId);

                $.ajax({
                    type: "POST",
                    url: link,
                    data: { documentId: documentId, procedureId: procedureId },
                    cache: false,
                    beforeSend: function() {
                        $('#load').show();
                        document.getElementById(loaderId).style.visibility = 'visible';
                        toastr.options.timeOut = 30000;
                        toastr.info("Wait a moment! File deleting...");},
                    success: function () {
                        toastr.options.timeOut = 20000;
                        commentContainer.slideUp('slow', function() { $(this).remove(); });
                        $('#load').fadeOut();
                        document.getElementById('load').style.visibility = "hidden";
                        console.log("deleted success!");
                        toastr.info("File deleted successful! Wait while it appears away from the page!");
                    }
                });
                return false;
            });
        });

    </script>
}
@Scripts.Render("~/Scripts/Procedures/Procedure.js")
@Scripts.Render("~/Scripts/ajax-form.js")

<style>
    [hidden] {
        display: none !important;
    }

    .width_100 {
        width: 100% !important;
    }

    form {
        display: block;
        margin: 20px auto;
        background: #eee;
        border-radius: 10px;
        padding: 15px;
        /*min-height: 400px;*/
        height: auto;
    }

    .progress-bar {
        position: relative;
        width: 100%;
        border: 1px solid #ddd;
        padding: 1px;
        border-radius: 3px;
    }

    .progress-bar-success {
        background-color: #B4F5B4;
        width: 0%;
        height: 20px;
        border-radius: 3px;
    }

    .percent {
        position: absolute;
        display: inline-block;
        top: 3px;
        left: 48%;
    }

    /*delete files*/
    #load {
        position: absolute;
        left: 225px;
        background-image: url(../../Content/images/loading-bg.png);
        background-position: center;
        background-repeat: no-repeat;
        width: 159px;
        color: #999;
        font-size: 18px;
        font-family: Arial, Helvetica, sans-serif;
        height: 40px;
        font-weight: 300;
        padding-top: 14px;
        top: 23px;
    }


    .delete {
        /*margin-top: 7px;*/
        /*float: left;*/
        margin-left: 30px;
    }

    a.delete {
        padding: 3px;
        text-align: center;
        font-size: 18px;
        font-weight: 700;
        text-decoration: none;
        color: #C00;
    }

        a.delete:hover {
            background-color: #900;
            color: #FFF;
        }

    .load {
    }

    .product_span span {
        color: darkcyan;
        font-size: 20px;
        display: block;
    }

    span:empty {
        height: 0px !important;
    }

    .productInfo img {
        margin-left: 15px;
        height: 20px;
    }

    .flag {
        margin-left: 15px;
        height: 20px;
    }
</style>