@{
    ViewBag.Title = "Edit Procedure";
}
@using System.Web.Mvc.Html
@model Olga.Models.ProcedureEditModel

<div>
    <div class="row" style="overflow: auto; margin-left:  20px;margin-right: 10px;">
        <div class="alert-success" style="width: 100%">
            <h1>
                <span id="CountryName"></span>
                <span class="productInfo"><img class="productInfo" src="../../Content/images/loader.gif" /></span>
                <img class="flag" id="CountryFlag" />
            </h1>
        </div>
        <h2>
            Update Procedure for:<span style="color: blue; font-weight: bold; margin-top: 20px;">
                <span id="ProductNameWithLink" style="color: blue; font-weight: bold; margin-top: 20px;"></span>
            </span>
        </h2>
        <div class="product_span">
            @MyHelpers.MakeProductInfoField()
        </div>
        <br />
        <br />
        @using (Html.BeginForm("EditProcedure", "Procedure", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <br />
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ProductId)
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ProcedureType, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.ProcedureType, new { @class = "form-control" })
                </div>
            </div>

            <hr />
            <div class="form-group">
                @Html.Label("", "Archive", htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-10">
                    <input style="margin-top: 7px !important; margin-right: 20px;" class="checkbox-success" id="SubmissionDateCheckbox" name="SubmissionDateCheckbox" onclick="submissionDateUnknownClick()" type="checkbox">   Submission Date Unknown
                </div>
            </div> 
            <div class="form-group">
                @Html.Label("", "Estimated", htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-10">
                    <input style="margin-top: 7px !important; margin-right: 20px;" class="checkbox-success" id="EstimatedSubmissionDateCheckbox" name="EstimatedSubmissionDateCheckbox" onclick="submissionDateEstimatedClick()" type="checkbox">   @Resources.Labels.SubmissionDateEst
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.EstimatedSubmissionDate, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-10">
                    @{
                        var dateValue3 =
                            DateTime.MinValue == Model.EstimatedSubmissionDate
                                ? String.Empty
                                : Model.EstimatedSubmissionDate.ToString();
                    }
                    <input class="form-control rounded" id="EstimatedSubmissionDate" style= "visibility:hidden" name="EstimatedSubmissionDate" value="@dateValue3" />
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.SubmissionDate, htmlAttributes: new { id = "SubmissionDateLabel", @class = "control-label col-md-1" })
                <div class="col-md-10">
                    @{
                        var dateValue2 = DateTime.Parse(@Model.SubmissionDate.ToString()).ToString("u").Substring(0, 10);
                    }
                    <input class="form-control rounded"
                           data-val="true"
                           id="SubmissionDate"
                           name="SubmissionDate"
                           value="@dateValue2" />
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EstimatedApprovalDate, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-10">
                    @{
                        var dateValue1 =
                            DateTime.MinValue == Model.EstimatedApprovalDate
                                ? String.Empty
                                : DateTime.Parse(@Model.EstimatedApprovalDate.ToString()).ToString("u").Substring(0, 10);
                    }
                    <input class="form-control rounded"
                           data-val="true"
                           id="EstimatedApprovalDate"
                           name="EstimatedApprovalDate"
                           value="@dateValue1" />
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ApprovalDate, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-10">
                    @{
                        var dateValue =
                            Model.ApprovalDate == null || DateTime.MinValue == Model.ApprovalDate
                                ? String.Empty
                                : DateTime.Parse(@Model.ApprovalDate.ToString()).ToString("u").Substring(0, 10);
                    }
                    <input class="form-control rounded"
                           data-val="true"
                           id="ApprovalDate"
                           name="ApprovalDate"
                           value="@dateValue" />
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Comments, new { @class = "form-control" })
                </div>
            </div>
            <br />
        </div>
            <div class="form-group">
                <div class="col-md-1 col-xs-1 col-md-offset-1">
                    <input type="submit" value="Save" class="btn btn-primary" id="submit-all" />
                </div>
            </div>
            <div class="empty"></div>

        }
    </div>
</div>
<style>
    .product_span span {
        color: darkcyan;
        font-size: 20px;
        display: block;
    }
    .productInfo img {
        margin-left: 15px;
        height: 20px;
    }
    .flag {
        margin-left: 15px;
        height: 20px;
    }
</style>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/dropzonescripts")
    <script src='@Url.Content("~/Scripts/jquery-ui-1.12.1.min.js")' type="text/javascript"></script>
    @Scripts.Render("~/Scripts/Procedures/Procedure.js")

    <script type="text/javascript">
        (function (parameters) {
            $(document).ready(function () {
                var submissionDateInput = document.getElementById("SubmissionDate");
                console.log("submissionDateInput=" + submissionDateInput.value);
                if (submissionDateInput.value === '1900-01-01') {
                    document.getElementById("SubmissionDateCheckbox").checked = true;
                    submissionDateUnknownClick();
                }
                var format = 'YYYY-MM-DD';
                $('#ApprovalDate').datetimepicker({
                    format: format
                });
                $('#SubmissionDate').datetimepicker({
                    format: format
                });
                $('#EstimatedApprovalDate').datetimepicker({
                    format: format
                });
                $('#EstimatedSubmissionDate').datetimepicker({
                    format: format
                });
            });
        }());

        function submissionDateUnknownClick() {

            var checkBoxArch = document.getElementById("SubmissionDateCheckbox");
            var checkBoxEst = document.getElementById("EstimatedSubmissionDateCheckbox");
            var submissionDateInput = document.getElementById("SubmissionDate");
            var submissionEstDateInput = document.getElementById("EstimatedSubmissionDate");

            if (checkBoxArch.checked == true) {

                checkBoxEst.disabled = true;

                submissionDateInput.style.disabled = true;
                submissionDateInput.style.visibility = "hidden";
                submissionDateInput.value = "1900-01-01";
            } else {

                checkBoxEst.disabled = false;

                submissionDateInput.style.disabled = false;
                submissionDateInput.style.visibility = "visible";
                submissionDateInput.value = new Date().toISOString().slice(0, 10);
            }
            submissionEstDateInput.style.visibility = "hidden";
            submissionEstDateInput.value = new Date().toISOString().slice(0, 10);
        }

        function submissionDateEstimatedClick() {

            var checkBoxArch = document.getElementById("SubmissionDateCheckbox");
            var checkBoxEst = document.getElementById("EstimatedSubmissionDateCheckbox");
            var submissionDateInput = document.getElementById("SubmissionDate");
            var submissionEstDateInput = document.getElementById("EstimatedSubmissionDate");

            if (checkBoxEst.checked == true) {

                checkBoxArch.disabled = true;

                submissionDateInput.style.disabled = true;
                submissionDateInput.style.visibility = "hidden";
                submissionDateInput.value = "1900-01-01";

                submissionEstDateInput.style.visibility = "visible";
                submissionEstDateInput.value = new Date().toISOString().slice(0, 10);
                submissionEstDateInput.style.disabled = false;

            }
            else {

                checkBoxArch.disabled = false;

                submissionDateInput.style.disabled = false;
                submissionDateInput.style.visibility = "visible";
                submissionDateInput.value = new Date().toISOString().slice(0, 10);

                submissionEstDateInput.style.disabled = false;
                submissionEstDateInput.style.visibility = "hidden";
                submissionEstDateInput.value = new Date().toISOString().slice(0, 10);
            }
        }

        $(function () {
            var queryString = window.location.search;
            var urlParams = new URLSearchParams(queryString);
            var productId = urlParams.get('productId');
            var link = '@Url.Action("GetProductInfo", "Procedure")';
            getProductInfo(link, productId);
        });
    </script>
}




