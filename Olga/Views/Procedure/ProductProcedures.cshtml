@using Olga.DAL.Entities
@using Olga.Models
@model IList<ProcedureViewModel>
@{
    ViewBag.Title = "Procedures";
    var hasAccess = false;
    if (@ViewBag.User.Countries != null)
    {
        hasAccess = (@ViewBag.User.Countries as List<CountryViewModel>).Any(a => a.Name.Equals(@ViewBag.Country));
    }
}

<div>
    <div class="row" style="overflow: auto; margin-left: 20px;margin-right: 10px;">
        <div class="alert-success" style="width: 100%">
            <h1>@ViewBag.Country</h1>
        </div>
        <h2>Procedures for:<span style="color: blue"> @ViewBag.Product.ProductName</span></h2>
        <div class="product_span">
            <span>@ViewBag.Product.PharmaceuticalForm</span>
            <span>@ViewBag.Product.ProductCode</span>
            <span>@ViewBag.Product.Strength</span>
            <span>@ViewBag.Product.MarketingAuthorizNumber</span>
        </div>
        @{
            if (Model.Count != 0)
            {
                <div id="proc_table">
                    <table class="table table-striped table-bordered table-responsive" id="product-table" style='overflow: auto'>
                        <thead class="thead_table" style='text-align: center;'>
                            <tr>
                                <th>Procedure type</th>
                                <th>Lifecycle / Documents</th>
                                <th>Name</th>
                                <th>Submission Date</th>
                                <th>Approval Date</th>
                                <th>Comments</th>
                                <th>
                                    <span class="action_span">
                                        Action
                                    </span>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                        @for (var i = 0; i < Model.Count; i++)
                        {
                            <tr data-rowid="@i">
                                <td>@Model[i].ProcedureType</td>
                                <td>
                                    @foreach (var period in ViewBag.DocsType)
                                    {
                                        switch (period)
                                        {
                                            case ProcedureDocsType.DossierObtainedFromM:
                                                @Html.ActionLink($"{Resources.ProcedureDocsTypes.DossierObtainedFromM}", "EditFiles", "Procedure", new { id = @Model[i].Id, productId = @Model[i].ProductId, procedureDocsType = ProcedureDocsType.DossierObtainedFromM }, new{target= "_blank"})
                                                <br /><br />
                                                foreach (var document in Model[i].ProcedureDocuments)
                                                {
                                                    if (document.ProcedureDocsType == ProcedureDocsType.DossierObtainedFromM)
                                                    {
                                                        <i class="glyphicon glyphicon-file"></i>
                                                        <a class="docs_link" href="~/Upload/Documents/Procedures/@document.PathToDocument">@document.PathToDocument</a><br />
                                                    }
                                                }
                                                <hr />
                                                break;
                                            case ProcedureDocsType.DossierSubmittedToAuth:
                                                @Html.ActionLink($"{Resources.ProcedureDocsTypes.DossierSubmittedToAuth}", "EditFiles", "Procedure", new { id = @Model[i].Id, productId = @Model[i].ProductId, procedureDocsType = ProcedureDocsType.DossierSubmittedToAuth }, new { target = "_blank" })
                                                <br /><br />
                                                foreach (var document in Model[i].ProcedureDocuments)
                                                {
                                                    if (document.ProcedureDocsType == ProcedureDocsType.DossierSubmittedToAuth)
                                                    {
                                                        <i class="glyphicon glyphicon-file"></i>
                                                        <a class="docs_link" href="~/Upload/Documents/Procedures/@document.PathToDocument">@document.PathToDocument</a><br />
                                                    }
                                                }
                                                <hr />
                                                break;
                                            case ProcedureDocsType.RemarksFromAuth:
                                                @Html.ActionLink($"{Resources.ProcedureDocsTypes.RemarksFromAuth}", "EditFiles", "Procedure", new { id = @Model[i].Id, productId = @Model[i].ProductId, procedureDocsType = ProcedureDocsType.RemarksFromAuth }, new { target = "_blank" })
                                                <br /><br />
                                                foreach (var document in Model[i].ProcedureDocuments)
                                                {
                                                    if (document.ProcedureDocsType == ProcedureDocsType.RemarksFromAuth)
                                                    {
                                                        <i class="glyphicon glyphicon-file"></i>
                                                        <a class="docs_link" href="~/Upload/Documents/Procedures/@document.PathToDocument">@document.PathToDocument</a><br />
                                                    }
                                                }
                                                <hr />
                                                break;
                                            case ProcedureDocsType.RemarksToAuth:
                                                @Html.ActionLink($"{Resources.ProcedureDocsTypes.RemarksToAuth}", "EditFiles", "Procedure", new { id = @Model[i].Id, productId = @Model[i].ProductId, procedureDocsType = ProcedureDocsType.DossierObtainedFromM }, new { target = "_blank" })
                                                <br /><br />
                                                foreach (var document in Model[i].ProcedureDocuments)
                                                {
                                                    if (document.ProcedureDocsType == ProcedureDocsType.RemarksToAuth)
                                                    {
                                                        <i class="glyphicon glyphicon-file"></i>
                                                        <a class="docs_link" href="~/Upload/Documents/Procedures/@document.PathToDocument">@document.PathToDocument</a><br />
                                                    }
                                                }
                                                break;
                                        }
                                    }
                                </td>
                                <td>@Model[i].Name</td>
                                <td>@{var submissionDate = Model[i].SubmissionDate != null ? DateTime.Parse(@Model[i].SubmissionDate.ToString()).ToString("u").Substring(0, 10) : null; } @submissionDate </td>
                                <td>@{var approvalDate = Model[i].ApprovalDate != null ? DateTime.Parse(@Model[i].ApprovalDate.ToString()).ToString("u").Substring(0, 10) : null; } @approvalDate </td>
                                <td>@Model[i].Comments</td>
                                <td>
                                    <div style="text-align: center;">
                                        @{
                                            if (User.IsInRole("Admin") || User.IsInRole("Manager"))
                                            {
                                                <br />
                                                <br />
                                                <span>
                                                    @Html.ActionLink("   ", "EditProcedure", "Procedure", new { id = @Model[i].Id, productId = @Model[i].ProductId }, new
                                           { @class = "glyphicon glyphicon-pencil", @target = "_blank" })
                                            </span>
                                            <br /> <br />
                                            <span>
                                                @Html.ActionLink("   ", "EditProcedureFiles", "Procedure", new { id = @Model[i].Id, productId = @Model[i].ProductId }, new
                                                                                              { @class = "glyphicon glyphicon-file", @target = "_blank" })
                                            </span>
                                            <br /><br />
                                            <span>
                                                @Html.ActionLink("   ", "DeleteProcedure", "Procedure", new { id = @Model[i].Id, productId = @Model[i].ProductId }, new
                                                {
                                                    @class = "glyphicon glyphicon-trash text-warning",
                                                    onclick = "return confirm('Are you sure you wish to delete this procedure?');"
                                                })
                                            </span>

                                        }
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <br />
                <div class="no_proc">
                    <span>No Procedures for product yet!</span>
                </div>
            }
        }
    </div>
    <hr />
    <div style="margin-left: 10px;">
        @if (User.IsInRole("Admin") || hasAccess)
        {
            @Html.ActionLink("Create procedure", "CreateProcedure", "Procedure", new { id = @ViewBag.Product.Id }, new { @class = "btn btn-primary", data_icon = "gear" })
        }
    </div>
    <div class="empty"></div>
</div>
<style>
    .product_span span {
        color: darkcyan;
        font-size: 20px;
    }

    .no_proc span {
        margin-top: 75px;
        color: darkblue;
        font-weight: bold;
        font-size: 30px;
    }

    .action_span {
        margin-left: 5px;
        margin-right: 5px;
    }

    #proc_table {
        margin-top: 40px;
    }

    .docs_link {
    color: darkblue;
    }

        .docs_link:hover {
            color: darkgreen;
        }

        .docs_link:visited {
            color: darkmagenta;
        }
</style>
@if (TempData["Success"] != null)
{
    <input id="RenderFlashMessages" name="RenderFlashMessages" type="hidden" value='@TempData["Success"]' />
}
else if (TempData["Error"] != null)
{
    <input id="RenderFlashErrorMessages" name="RenderFlashErrorMessages" type="hidden" value='@TempData["Error"]' />
}
<script>

    function showRenderFlashMessages() {
        var value = $('#RenderFlashMessages').val();
        var valueError = $('#RenderFlashErrorMessages').val();
        if (value) {
            toastr.info(value);
            $('#RenderFlashMessages').val('');
        }
        if (valueError) {
            toastr.alert(valueError);
            $('#RenderFlashMessages').val('');
        }
    }
    window.onload = showRenderFlashMessages;
</script>
