@using System.Globalization
@using System.IO
@using System.IO.Compression
@using System
@using Olga.DAL.Entities
@using Olga.Models
@model IList<ProcedureViewModel>
@{
    ViewBag.Title = $"Procedurs | {ViewBag?.Product?.ProductName}";
    var flagSrc = $"{@ViewBag.CountryId}.gif";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
@Styles.Render("~/Content/Site.css")

<div>
    <div class="row" style="overflow: auto; margin-left: 20px;margin-right: 10px;">
        <div class="alert-success" style="width: 100%">
            <h1>
                @ViewBag.Country
                <img style="margin-left: 15px; height: 20px;" src="~/Content/images/countries/@flagSrc" />
            </h1>
        </div>
        <h2>
            Procedures for:<span style="color: blue">
                @Html.ActionLink($"{ViewBag.Product.ProductName ?? "No Name"}", "ShowDocuments", "Product", new { id = @ViewBag.Product.Id, countryId = @ViewBag.CountryId }, new { target = "_blank" })
            </span>
        </h2>
        <div class="product_span">
            <span>@ViewBag.Product.PharmaceuticalForm</span>
            <span>@ViewBag.Product.ProductCode</span>
            <span>@ViewBag.Product.Strength</span>
            <span>@ViewBag.Product.MarketingAuthorizNumber</span>
        </div>
        @{
            if (Model.Count == 0)
            {
                <br /><div class="no_proc"><span>No Procedures for product yet!</span></div>
            }
            else if (Model.Count != 0)
            {
                @Html.Hidden("ProductId", $"{@ViewBag.Product.Id}");

                <div id="proc_table">
                    <table class="table table-striped table-bordered table-responsive text-top" id="product-table" style='overflow: auto'>
                        <thead class="thead_table" style='text-align: center;'>
                            <tr>
                                <th>@Resources.TableHead.ProcedureType</th>
                                <th>@Resources.TableHead.LifecycleDocuments</th>
                                <th>@Resources.TableHead.NameEng</th>
                                <th>@Resources.Labels.SubmissionDate</th>
                                <td>@Resources.Labels.EstimatedApprovalDate</td>
                                <th>@Resources.Labels.ApprovalDate</th>
                                <th>@Resources.Labels.Comments</th>
                                <th><span class="action_span">Action</span></th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (var i = 0; i < Model.Count; i++)
                            {
                                int filesCount = GetFilesCount(@Model[i]);
                                string boxId = $"box{i}";
                                string hrefAnchor = $"#toggler{i}";
                                string divLoader = $"divLoader{i}";
                                <tr data-rowid="@i">
                                    <td style="vertical-align: text-top !important">@Model[i].ProcedureType</td>
                                    <td class="hide_td">
                                        <a onclick="javascript:openbox('@boxId', this, @filesCount);" href="@hrefAnchor">
                                            <span>Show list (@filesCount files) </span>
                                            <i class="glyphicon glyphicon-arrow-down"></i>
                                        </a><br />
                                        <div id="@boxId" style="display: none;">
                                            @MyHelpers.MakeViewFiles(Model[i])
                                        </div>
                                        @{
                                            var files = String.Join(";", @Model[i].ProcedureDocuments.Select(a => a.PathToDocument).ToList());
                                            @Html.Hidden($"{i}FilesToDownload", files, new {@id= $"{i}FilesToDownload" });
                                            @Html.Hidden($"{i}ArchName", string.Format($"{@Model[i].Product.ProductName??"Procedure"}_{@Model[i].ProcedureType}_{DateTime.Today.ToShortDateString()}.zip"), new { @id = $"{i}ArchName" });
                                        }
                                        <button style="margin-top: 15px !important" onclick="downloadZip(this)" type="submit" id="@i" class="btn btn-upload">
                                            <i class="fa fa-download"></i> Download All
                                        </button>
                                        <div id="@divLoader" style="display: none;">
                                             Loading... <img src="~/Content/images/loader.gif" width="28" height="20" alt="Loader"/>
                                        </div>
                                    </td>
                                    <td>@Model[i].Name</td>
                                    <td>
                                        @{ var submissionDate = DateTime.Parse(@Model[i].SubmissionDate.ToString()).ToString("u").Substring(0, 10); }
                                        @submissionDate
                                    </td>
                                    <td>
                                        @{ var estimatedApprovalDate = @Model[i].EstimatedApprovalDate != DateTime.Parse("1900-01-01 00:00:00.000")  ? @Model[i].EstimatedApprovalDate.ToString("u").Substring(0, 10) : "Not defined"; }
                                        @estimatedApprovalDate
                                    </td>
                                    <td>
                                        @{ var approvalDate = Model[i].ApprovalDate != null ? DateTime.Parse(@Model[i].ApprovalDate.ToString()).ToString("u").Substring(0, 10) : null; }
                                        @approvalDate
                                    </td>
                                    <td>@Model[i].Comments</td>
                                    <td>
                                        <div style="text-align: center;">
                                            @{
                                                if (User.IsInRole("Admin") || User.IsInRole("Manager"))
                                                {
                                                    <br />
                                                    <br />
                                                    <span>
                                                        @Html.ActionLink("   ", "EditProcedure", "Procedure", new {id = @Model[i].Id, productId = @Model[i].ProductId}, new
                                                        {@class = "glyphicon glyphicon-pencil", @target = "_blank"})
                                                    </span>
                                                    <br />
                                                    <br />
                                                    <span>
                                                        @Html.ActionLink("   ", "EditProcedureFiles", "Procedure", new {id = @Model[i].Id, productId = @Model[i].ProductId}, new
                                                        {@class = "glyphicon glyphicon-file", @target = "_blank"})
                                                    </span>
                                                    <br />
                                                    <br />
                                                    <span>
                                                        @Html.ActionLink("   ", "DeleteProcedure", "Procedure", new {id = @Model[i].Id, productId = @Model[i].ProductId}, new
                                                   {
                                                       @class = "glyphicon glyphicon-trash text-warning",
                                                       onclick = "return confirm('Are you sure you wish to delete this procedure?');"
                                                   })
                                                    </span>
                                                }
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        }
    </div>
    <hr />
    <div style="margin-left: 10px;">
        @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
        {
            @Html.ActionLink("Create procedure", "CreateProcedure", "Procedure", new { id = @ViewBag.Product.Id }, new { @class = "btn btn-primary", data_icon = "gear" })
        }
    </div>
    <div class="empty"></div>
</div>
@{Html.RenderPartial("FlashMessage");}
@functions {

    public static int GetFilesCount(ProcedureViewModel procedureViewModel)
    {
        return procedureViewModel.ProcedureDocuments.Count;
    }
}
<style>
    .product_span span {
        color: darkcyan;
        display: block;
        font-size: 20px;
    }

    .no_proc span {
        margin-top: 75px;
        color: darkblue;
        font-weight: bold;
        font-size: 30px;
    }

    .action_span {
        margin-left: 5px;
        margin-right: 5px;
    }

    #proc_table {
        margin-top: 40px;
    }

    .docs_link {
        color: darkblue;
    }

        .docs_link:hover {
            color: darkgreen;
        }

        .docs_link:visited {
            color: darkmagenta;
        }
    
</style>
@section Scripts
{
    <script>
        function openbox(id, toggler, count) {
            var div = document.getElementById(id);
            if (div.style.display == 'block') {
                div.style.display = 'none';
                toggler.innerHTML =
                    'Show list (' + count + ' files) <i class="glyphicon glyphicon-arrow-down"></i><br>';

            } else {
                div.style.display = 'block';
                toggler.innerHTML = 'Hide list <i class="glyphicon glyphicon-arrow-up"></i><br/>';
            }
        };
   
        function downloadZip(e) {
            var  procId = e.id;
            var link = '@Url.Action("DownloadZip", "Procedure")';
            var filesToDownload = document.getElementById(procId + "FilesToDownload").value;
            var archName = document.getElementById(procId +"ArchName").value;
            var productId = document.getElementById("ProductId").value;
            $("#divLoader" + procId).show();
            toastr.info("Creating archive. Please wait...");
            $.ajax
            ({
                url: link,
                type: "POST",
                cache: false,
                    data: { filesToDownload, archName, productId },
                success: function(data) {
                    $("#divLoader" + procId).hide();
                    window.location.href = "/"+data;
                    toastr.info("Downloaded started!");
                },
                error: function(xhr) {
                    $("#divLoader" + procId).hide();
                    toastr.error('An error has occurred! Try again!');
                }
            });
        };
    </script>
}