@using Olga.DAL.Entities
@using Olga.Models
@using System.Globalization

@helper MakeEditFiles(ProcedureViewModel procedureViewModel, ProcedureDocsType procedureDocsType)
{
    <span class="doc_type_name">@GetFileTypeText(procedureDocsType)</span>
    <br /><br />
    foreach (var document in procedureViewModel?.ProcedureDocuments)
    {
        if (document.ProcedureDocsType == @procedureDocsType)
        {
            @MakeDivForFiles(document)
        }
    }
    <hr />
}

@helper MakeDivForFiles(ProcedureDocument document)
{
    <div>
        <a href="~/Upload/Documents/Procedures/@document.PathToDocument">@document.PathToDocument.Replace(@"/Archives/", "")</a>
        <a href="#" id="@document.Id" class="delete" title="Delete file">x</a>
        <img id="load_@document.Id" style="visibility: hidden; height: 30px; margin-left: 25px;" src="~/Content/images/loader.gif">
        <br />
    </div>
}


@helper  GetFileTypeText(ProcedureDocsType procedureDocsType)
{
    switch (procedureDocsType)
    {
        case ProcedureDocsType.DossierObtainedFromM:
            @Resources.ProcedureDocsTypes.DossierObtainedFromM
            break;
        case ProcedureDocsType.DossierSubmittedToAuth:
            @Resources.ProcedureDocsTypes.DossierSubmittedToAuth
            break;
        case ProcedureDocsType.RemarksFromAuth:
            @Resources.ProcedureDocsTypes.RemarksFromAuth
            break;
        case ProcedureDocsType.RemarksToAuth:
            @Resources.ProcedureDocsTypes.RemarksToAuth
            break;
    }
}

@helper MakeViewFiles(ProcedureViewModel procedureViewModel)
{
    var procedureDocsTypes = Enum.GetValues(typeof(ProcedureDocsType));

    foreach (var procedureDocsType in procedureDocsTypes)
    {

        if (User.IsInRole("Admin") || User.IsInRole("Manager"))
        {
            <a href="/Procedure/EditFiles/@procedureViewModel.Id?productId=@procedureViewModel.ProductId&procedureDocsType=@procedureDocsType">@GetFileTypeText((ProcedureDocsType)procedureDocsType)</a>
        }
        else
        {
            <span>@GetFileTypeText((ProcedureDocsType)procedureDocsType)</span>
        }
        <br />
        <br />
        foreach (var document in procedureViewModel.ProcedureDocuments)
        {
            if (document.ProcedureDocsType == (ProcedureDocsType)procedureDocsType)
            {
                <i class="glyphicon glyphicon-file"></i>
                <a class="docs_link" href="~/Upload/Documents/Procedures/@document.PathToDocument">@document.PathToDocument.Replace(@"/Archives/", "")</a>
                <br />
            }
        }
        <hr />
    }
}